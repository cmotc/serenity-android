buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:2.3.0'
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    classpath 'com.vanniktech:gradle-android-junit-jacoco-plugin:0.5.0'
  }

}

evaluationDependsOn(':plexapp-rest-library')
evaluationDependsOn(':subtitle-converter')

repositories {
  jcenter()
  mavenCentral()
  maven {
     url "http://kingargyle.github.io/repo"
  }
}

apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'com.vanniktech.android.junit.jacoco'

android {
  defaultConfig {
    versionCode 2000000
    versionName "2.0.0-M1"

    minSdkVersion 17
    targetSdkVersion 23
    compileSdkVersion 23
    buildToolsVersion "24.0.0"
  }


  compileSdkVersion 23
  buildToolsVersion "24.0.0"

if (project.hasProperty("keystore")) {
  signingConfigs {
    release {
      storeFile file(project.property("keystore"))
      storePassword project.property("storepass")
      keyAlias project.property("keyalias")
      keyPassword project.property("keypass")
    }
  }
}
  targetCompatibility = '1.7'
  sourceCompatibility = '1.7'

  buildTypes {
    debug {
      minifyEnabled false

    }
    release {
      if (project.hasProperty("keystore")) {
          signingConfig signingConfigs.release
      }
      zipAlignEnabled true
      minifyEnabled false
    }
  }

  lintOptions {
    checkReleaseBuilds false
    // Or, if you prefer, you can continue to check for errors in release builds,
    // but continue the build even when errors are found:
    abortOnError false
  }

  testOptions {
    unitTests.returnDefaultValues = true
    unitTests.all {
      maxParallelForks = 2
      forkEvery = 50
      minHeapSize = "512m"
      maxHeapSize = "1024m"
    }
  }
}


junitJacoco {
  jacocoVersion = '0.7.2.201409121644' // type String
}

dependencies {

  compile 'org.apache.commons:commons-lang3:3.3.2'
  compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
  compile 'com.google.android.gms:play-services-analytics-impl:10.2.1'
  compile 'com.google.android:youtube-player-api:1.2.2'
  compile 'com.android.support:appcompat-v7:25.3.1'
  compile 'com.android.support:leanback-v17:25.3.1'
  compile 'com.android.support:support-v4:25.3.1'
  compile project(':plexapp-rest-library')
  compile project(':subtitle-converter')
  compile 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
  compile 'com.mcxiaoke.volley:library:1.0.6'
  compile('com.squareup.okhttp3:okhttp:3.6.0') {
    exclude group: 'com.android.support'
  }
  compile 'com.squareup.okhttp3:okhttp-urlconnection:3.6.0'
  compile 'com.squareup.dagger:dagger:1.2.2'
  apt 'com.squareup.dagger:dagger-compiler:1.2.2'
  compile 'com.github.vganin:dpadaware-recyclerview:1.0.1'
  compile 'com.jakewharton:butterknife:8.4.0'
  apt 'com.jakewharton:butterknife-compiler:8.4.0'

  testCompile 'junit:junit:4.11'
  testCompile ('org.robolectric:robolectric:3.3.2') {
    exclude module: 'support-v4'
  }
  testCompile 'org.robolectric:shadows-core:3.3.2'
  testCompile 'org.robolectric:shadows-httpclient:3.3.2'
  testCompile 'org.robolectric:shadows-support-v4:3.3.2'
  testCompile 'org.robolectric:shadows-play-services:3.3.2'
  testCompile 'org.khronos:opengl-api:gl1.1-android-2.1_r1'

  testCompile ('com.squareup:fest-android:1.0.7') {
    exclude module: 'support-v4'
  }
  testCompile 'org.mockito:mockito-all:1.9.5'
  testCompile 'com.squareup.okhttp3:mockwebserver:3.6.0'
  testCompile 'commons-io:commons-io:2.4'
  testApt 'com.squareup.dagger:dagger-compiler:1.2.2'
}

/*
 * Gets the version name from the latest Git tag
 */
def getVersionName = { ->
  def stdout = new ByteArrayOutputStream()
  exec {
    commandLine 'git', 'describe', '--tags'
    standardOutput = stdout
  }
  return stdout.toString().trim()
}
